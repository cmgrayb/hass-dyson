"""Simple test to verify firmware update functionality is working."""

from unittest.mock import MagicMock

import pytest

from custom_components.hass_dyson.binary_sensor import DysonFirmwareUpdateAvailableSensor
from custom_components.hass_dyson.coordinator import DysonDataUpdateCoordinator
from custom_components.hass_dyson.switch import DysonFirmwareAutoUpdateSwitch


def test_firmware_update_sensor_basic():
    """Test basic functionality of firmware update sensor."""
    # Create a mock coordinator
    mock_coordinator = MagicMock()
    mock_coordinator.serial_number = "TEST123"
    mock_coordinator.device_name = "Test Device"
    mock_coordinator.firmware_update_available = True
    mock_coordinator.firmware_version = "21.01.08"
    mock_coordinator.firmware_auto_update_enabled = False

    # Create the sensor
    sensor = DysonFirmwareUpdateAvailableSensor(mock_coordinator)

    # Test basic properties
    assert "firmware_update_available" in sensor.unique_id
    assert "Firmware Update Available" in sensor.name
    assert sensor.device_class == "update"

    # Test state
    assert sensor.is_on is True  # Update available


def test_firmware_auto_update_switch_basic():
    """Test basic functionality of firmware auto-update switch."""
    # Create a mock coordinator
    mock_coordinator = MagicMock()
    mock_coordinator.serial_number = "TEST123"
    mock_coordinator.device_name = "Test Device"
    mock_coordinator.firmware_auto_update_enabled = True
    mock_coordinator.firmware_version = "21.01.08"
    mock_coordinator.firmware_update_available = False

    # Create the switch
    switch = DysonFirmwareAutoUpdateSwitch(mock_coordinator)

    # Test basic properties
    assert "firmware_auto_update" in switch.unique_id
    assert "Firmware Auto Update" in switch.name

    # Test state
    assert switch.is_on is True  # Auto-update enabled


def test_coordinator_firmware_properties():
    """Test that coordinator has the right firmware properties."""
    # Test that the coordinator class has the required properties
    assert hasattr(DysonDataUpdateCoordinator, 'firmware_version')
    assert hasattr(DysonDataUpdateCoordinator, 'firmware_auto_update_enabled')
    assert hasattr(DysonDataUpdateCoordinator, 'firmware_update_available')
    assert hasattr(DysonDataUpdateCoordinator, 'async_set_firmware_auto_update')
    assert hasattr(DysonDataUpdateCoordinator, '_extract_firmware_version')
