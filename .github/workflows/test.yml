name: Tests

# Note: Testing limited to Python 3.13 due to pytest-homeassistant-custom-component
# dependency compatibility issues with older Python versions

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python*/site-packages
          key: ${{ runner.os }}-pip-3.13-${{ hashFiles('requirements-dev.txt', 'requirements.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.13-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Cache pytest and mypy
        uses: actions/cache@v4
        with:
          path: |
            .pytest_cache
            .mypy_cache
            .coverage
          key: ${{ runner.os }}-pytest-mypy-3.13-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pytest-mypy-3.13-
            ${{ runner.os }}-pytest-mypy-

      - name: Verify installation
        run: |
          python -c "import custom_components.hass_dyson; print('✅ Integration import successful')"
          python -c "import pytest; print(f'✅ Pytest version: {pytest.__version__}')"

      - name: Run all tests
        run: |
          python -m pytest tests/ \
            -v \
            --tb=short \
            --no-cov

  coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python*/site-packages
          key: ${{ runner.os }}-pip-coverage-${{ hashFiles('requirements-dev.txt', 'requirements.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-coverage-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run tests with comprehensive coverage
        run: |
          python -m pytest tests/ \
            --cov=custom_components.hass_dyson \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            --cov-branch \
            -v

      - name: Check coverage threshold
        run: |
          python -c "
          import xml.etree.ElementTree as ET
          tree = ET.parse('coverage.xml')
          root = tree.getroot()
          coverage = float(root.get('line-rate')) * 100
          print(f'Coverage: {coverage:.2f}%')
          if coverage < 80:
              print(f'❌ Coverage {coverage:.2f}% is below 80% threshold')
              exit(1)
          else:
              print(f'✅ Coverage {coverage:.2f}% meets 80% threshold')
          "

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 7

  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python*/site-packages
          key: ${{ runner.os }}-pip-quality-${{ hashFiles('requirements-dev.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-quality-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run Ruff formatting check
        run: |
          python -m ruff format --check --diff .

      - name: Run Ruff linting check
        run: |
          python -m ruff check . --output-format=github

      - name: Run MyPy type checking
        continue-on-error: true
        run: |
          echo "::group::MyPy Type Checking"
          python -m mypy custom_components/hass_dyson || echo "MyPy found type issues (non-blocking)"
          echo "::endgroup::"

      - name: Run Bandit security check
        run: |
          python -m bandit -r custom_components/ -f json || true

  integration:
    name: Integration Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run all tests (integration validation)
        run: |
          echo "🔗 Running all tests to validate integration..."
          python -m pytest tests/ -v --tb=short --no-cov

  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          python -m twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
          retention-days: 7
